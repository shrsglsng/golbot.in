import { ItemModel } from "@/models/itemModel";
import Sidebar from "@/shared/sidebar";
import Head from "next/head";
import Link from "next/link";
import axios from "axios";
import { useEffect, useState } from "react";
import { UpdateItemDialog } from "@/shared/updateItemDialog";

function Items() {
  const [itemList, setItemList] = useState<ItemModel[]>([]);

  function ItemsTableRow({ item }: { item: ItemModel }) {
    const [isOpenDialog, setIsOpenDialog] = useState<boolean>(false);
    return (
      <tr className="bg-white border-b">
        <th className="px-6 py-4 font-medium text-gray-900 whitespace-nowrap text-left">
          {item.name}
        </th>
        <td className="px-6 py-4 text-right capitalize">{item.price}</td>
        <td className="px-6 py-4 text-right capitalize">{item.gst}</td>
        <td className="px-6 py-4 text-right">
          <UpdateItemDialog
            open={isOpenDialog}
            setOpen={setIsOpenDialog}
            item={item}
            updatePage={getAllItems}
          />
          <button
            className="text-cblue"
            onClick={() => {
              setIsOpenDialog(true);
            }}>
            Update Items
          </button>
        </td>
      </tr>
    );
  }

  async function getAllItems() {
    if (!process.env.NEXT_PUBLIC_SERVER_URL) throw "Server Url Not Set";
    const url = process.env.NEXT_PUBLIC_SERVER_URL + "/getAllItems";
    try {
      var res = await axios.get(url, {
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (res.status === 200) {
        setItemList(res.data.items);
      }
    } catch (e: any) {}
  }

  useEffect(() => {
    getAllItems();
  }, []);

  return (
    <>
      <Head>
        <title>Items</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-screen h-screen flex">
        {/* sideBar */}
        <div className="w-72 h-screen fixed">
          <Sidebar />
        </div>
        {/* content */}
        <div className="w-[20%]" />
        <div className="w-[80%] h-full p-10 grid place-items-center">
          <div className="w-full p-10 flex flex-col bg-slate-200 rounded-md">
            <div className="text-4xl">Items</div>
            <div className="h-6" />
            {/* table */}
            <div className="w-full overflow-x-auto rounded-lg">
              <table className="w-full text-sm text-left text-gray-500">
                <thead className="text-gray-900 uppercase bg-gray-50">
                  <tr>
                    <th className="px-6 py-3 text-left">Name</th>
                    <th className="px-6 py-3 text-right">Price</th>
                    <th className="px-6 py-3 text-right">GST</th>
                    <th className="px-6 py-3 text-right">Action</th>
                  </tr>
                </thead>
                <tbody>
                  {itemList.map((item: ItemModel, i: number) => (
                    <ItemsTableRow key={i} item={item} />
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

export default Items;
